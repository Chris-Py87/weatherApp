package com.eap.pli24.weatherapp.gui;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import com.eap.pli24.weatherapp.db.City;
import com.eap.pli24.weatherapp.db.CityForecast;
import com.eap.pli24.weatherapp.db.MyJpaLinker;
import com.eap.pli24.weatherapp.json.MyHttpRequester;

public class CitySearchScreenForm extends javax.swing.JFrame {
    
    MyJpaLinker linker = new MyJpaLinker();
    CityForecast forecast  = new CityForecast();
        
    public CitySearchScreenForm() {
        setTitle("Αναζήτηση Καιρού Πόλεων");
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        cityTextField = new javax.swing.JTextField();
        cityForecastJButtonSearch = new javax.swing.JButton();
        weatherDescriptionLabel = new javax.swing.JLabel();
        weatherDataPanel1 = new javax.swing.JPanel();
        temperatureTextField = new javax.swing.JTextField();
        temperatureLabel = new javax.swing.JLabel();
        humidityTextField = new javax.swing.JTextField();
        humidityLabel = new javax.swing.JLabel();
        uvTextField = new javax.swing.JTextField();
        uvLabel = new javax.swing.JLabel();
        windSpeedTextField = new javax.swing.JTextField();
        windSpeedLabel = new javax.swing.JLabel();
        moonPhasejLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        moonPhaseTextArea = new javax.swing.JTextArea();
        buttonsPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        weatherDataPanel2 = new javax.swing.JPanel();
        sunriseJLabel = new javax.swing.JLabel();
        sunsetJLabel = new javax.swing.JLabel();
        sunriseJtx = new javax.swing.JTextField();
        sunsetJtx = new javax.swing.JTextField();
        coordinatesjLabel = new javax.swing.JLabel();
        coordinatesJtx = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        weatherDescriptionTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forecast View");
        setBackground(new java.awt.Color(0, 51, 0));
        setMaximumSize(new java.awt.Dimension(32767, 32767));

        mainPanel.setBackground(new java.awt.Color(153, 204, 255));
        mainPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, new java.awt.Color(153, 153, 153)));
        mainPanel.setDoubleBuffered(false);
        mainPanel.setMinimumSize(new java.awt.Dimension(32767, 32767));
        mainPanel.setName("Forecast View"); // NOI18N
        mainPanel.setVerifyInputWhenFocusTarget(false);

        cityTextField.setBackground(new java.awt.Color(255, 255, 255));
        cityTextField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cityTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cityTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, new java.awt.Color(204, 255, 204), null, java.awt.Color.gray));
        cityTextField.setCaretColor(new java.awt.Color(0, 51, 0));
        cityTextField.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        cityTextField.setDoubleBuffered(true);
        cityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextFieldActionPerformed(evt);
            }
        });

        cityForecastJButtonSearch.setBackground(new java.awt.Color(153, 204, 255));
        cityForecastJButtonSearch.setForeground(new java.awt.Color(0, 153, 255));
        cityForecastJButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/icons8-search-48.png"))); // NOI18N
        cityForecastJButtonSearch.setToolTipText("");
        cityForecastJButtonSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cityForecastJButtonSearch.setOpaque(true);
        cityForecastJButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityForecastJButtonSearchActionPerformed(evt);
            }
        });

        weatherDescriptionLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        weatherDataPanel1.setBackground(new java.awt.Color(0, 102, 51));
        weatherDataPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 153), null, null));
        weatherDataPanel1.setForeground(new java.awt.Color(204, 255, 204));

        temperatureTextField.setBackground(new java.awt.Color(204, 204, 204));
        temperatureTextField.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        temperatureTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        temperatureTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        temperatureTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureTextFieldActionPerformed(evt);
            }
        });

        temperatureLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        temperatureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        temperatureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/thermometer.png"))); // NOI18N

        humidityTextField.setBackground(new java.awt.Color(204, 204, 204));
        humidityTextField.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        humidityTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        humidityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        humidityLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/humidity.50x50.png"))); // NOI18N

        uvTextField.setBackground(new java.awt.Color(204, 204, 204));
        uvTextField.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        uvTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        uvTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uvTextFieldActionPerformed(evt);
            }
        });

        uvLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/uv-index.50x50.png"))); // NOI18N

        windSpeedTextField.setBackground(new java.awt.Color(204, 204, 204));
        windSpeedTextField.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        windSpeedTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        windSpeedLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/wind.50x50.png"))); // NOI18N

        moonPhasejLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/waning-gibbous-moon.50x50.png"))); // NOI18N

        moonPhaseTextArea.setBackground(new java.awt.Color(204, 204, 204));
        moonPhaseTextArea.setColumns(20);
        moonPhaseTextArea.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        moonPhaseTextArea.setLineWrap(true);
        moonPhaseTextArea.setRows(5);
        moonPhaseTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(moonPhaseTextArea);

        javax.swing.GroupLayout weatherDataPanel1Layout = new javax.swing.GroupLayout(weatherDataPanel1);
        weatherDataPanel1.setLayout(weatherDataPanel1Layout);
        weatherDataPanel1Layout.setHorizontalGroup(
            weatherDataPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, weatherDataPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(temperatureLabel)
                .addGap(18, 18, 18)
                .addComponent(temperatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(humidityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(humidityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(uvLabel)
                .addGap(18, 18, 18)
                .addComponent(uvTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(windSpeedLabel)
                .addGap(18, 18, 18)
                .addComponent(windSpeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(moonPhasejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        weatherDataPanel1Layout.setVerticalGroup(
            weatherDataPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, weatherDataPanel1Layout.createSequentialGroup()
                .addGroup(weatherDataPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(weatherDataPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(weatherDataPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(weatherDataPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(moonPhasejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(temperatureTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(humidityTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uvTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(windSpeedTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, weatherDataPanel1Layout.createSequentialGroup()
                                .addGroup(weatherDataPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(windSpeedLabel)
                                    .addGroup(weatherDataPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(humidityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(temperatureLabel)
                                        .addComponent(uvLabel)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        buttonsPanel.setBackground(new java.awt.Color(0, 102, 51));
        buttonsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        saveButton.setBackground(new java.awt.Color(153, 153, 153));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/save-alt.30x27.png"))); // NOI18N
        saveButton.setText("Αποθήκευση");
        saveButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(153, 153, 153));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/delete.27x30.png"))); // NOI18N
        deleteButton.setText("Διαγραφή");
        deleteButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, java.awt.Color.lightGray));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(153, 153, 153));
        editButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 255));
        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/edit.30x27.png"))); // NOI18N
        editButton.setText("Επεξεργασία");
        editButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200)
                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        weatherDataPanel2.setBackground(new java.awt.Color(0, 102, 0));
        weatherDataPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        sunriseJLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sunriseJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/sunrise.50x50.png"))); // NOI18N

        sunsetJLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sunsetJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/sunset.50x50.png"))); // NOI18N

        sunriseJtx.setBackground(new java.awt.Color(204, 204, 204));
        sunriseJtx.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sunriseJtx.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sunriseJtx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sunriseJtxActionPerformed(evt);
            }
        });

        sunsetJtx.setBackground(new java.awt.Color(204, 204, 204));
        sunsetJtx.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sunsetJtx.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        coordinatesjLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        coordinatesjLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eap/pli24/weatherapp/resources/location-map-pin.30x45.png"))); // NOI18N

        coordinatesJtx.setBackground(new java.awt.Color(204, 204, 204));
        coordinatesJtx.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        coordinatesJtx.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coordinatesJtx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coordinatesJtxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout weatherDataPanel2Layout = new javax.swing.GroupLayout(weatherDataPanel2);
        weatherDataPanel2.setLayout(weatherDataPanel2Layout);
        weatherDataPanel2Layout.setHorizontalGroup(
            weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weatherDataPanel2Layout.createSequentialGroup()
                .addGroup(weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(weatherDataPanel2Layout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addGroup(weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sunriseJLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sunsetJLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18))
                    .addGroup(weatherDataPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(coordinatesjLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sunsetJtx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sunriseJtx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coordinatesJtx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        weatherDataPanel2Layout.setVerticalGroup(
            weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weatherDataPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sunriseJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sunriseJtx, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sunsetJtx, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sunsetJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(weatherDataPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coordinatesJtx, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coordinatesjLabel))
                .addGap(17, 17, 17))
        );

        weatherDescriptionTextArea.setBackground(new java.awt.Color(204, 204, 204));
        weatherDescriptionTextArea.setColumns(20);
        weatherDescriptionTextArea.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        weatherDescriptionTextArea.setLineWrap(true);
        weatherDescriptionTextArea.setRows(5);
        weatherDescriptionTextArea.setWrapStyleWord(true);
        weatherDescriptionTextArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane2.setViewportView(weatherDescriptionTextArea);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addComponent(weatherDescriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(weatherDataPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cityForecastJButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(weatherDataPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cityForecastJButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityTextField))
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(232, 232, 232)
                        .addComponent(weatherDescriptionLabel))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(weatherDataPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(weatherDataPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void temperatureTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureTextFieldActionPerformed

    }//GEN-LAST:event_temperatureTextFieldActionPerformed

    private void cityForecastJButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityForecastJButtonSearchActionPerformed

                             
        String cityAreaName = "";
        /*Λαμβάνουμε απο το TextField της Πόλης οτι έχει γράψει ο Χρήστης*/
        //με την trim() σβήνουμε τυχόν κενά πρίν και μετά το όνομα της πόλης
        cityAreaName = cityTextField.getText().trim();
        cityTextField.setText("");
        //Δηλώνουμε μία μεταβλητή για να αποθηκεύσουμε το όνομα της πόλης απο το API
        //με βάση την ip του χρήστη στην περίπτωση που ο χρήστης κάνει αναζήτηση για καιρικά δεδομένα 
        //χωρίς να έχει εισάγει στο αντίστοιχο textField (Jtx) κάποια ονομασία πόλης.
        String cityAreaNameFromIp = "";
        
        //ομοίως στην κάτωθι μεταβλητή θα αποθηκευτεί η ονομασία της πόλης απο το api
        //βάση της ονομασίας της πόλης που εισήγαγε ο χρήστης.        
        String cityAreaNameBasedOnUsersInput = "";
        
        //Αν ο Χρηστης δεν γράψει κανένα όνομα τότε γίνονται τα ακόλουθα.        
        if(cityAreaName.isBlank()){
           
            //Αποθηκεύουμε σε μία μεταβλητη το κενό string Που αντιπροσωπευει την είσοδο του χρήστη στο πεδίο της πόλης
            //και το περνάμε ως όρισμα στην στατική μέθοδο getCityForecastFromWttrAPI() προκειμένου να μας επιστρέψει
            //ενα αντικείμενο τύπου CityForecast για να αντλήσουμε τα επιθυμητά δεδομένα για εμφάνιση στον χρήστη και
            //αποθήκευση στην ΒΔ.
            String fetchDataForCurrentLocationBasedOnIP = " ";
            
            this.forecast = MyHttpRequester.getCityForecastFromWttrAPI(fetchDataForCurrentLocationBasedOnIP);
            
            //Εμφάνιση στα TextFields όλων των επιθυμητών πληροφοριών μέσω του αντικειμένου POJO. 
            temperatureTextField.setText(String.valueOf(forecast.getTemperature())); 
            humidityTextField.setText(String.valueOf(forecast.getHumidity()));
            windSpeedTextField.setText(String.valueOf(forecast.getWindspeed()));
            uvTextField.setText(String.valueOf(forecast.getUvindex()));
            //weatherDescriptionTextField.setText(forecast.getWeatherdescription());
            weatherDescriptionTextArea.setText(forecast.getWeatherdescription());
            /*Θέτουμε στο κενό πεδίο της πόλης στην οθόνη μας το όνομα της περιοχής με βάσει την IP που μας επιστρέφει το API*/            
            //Επιπροσθέτως εμφανίζουμε κάποια ακόμα πληροφορίες για την τρέχουσα αναζήτηση τις οποίες δεν θα αποθηκεύμε στην ΒΔ
            
            //Ενημερώνουμε το textfield του ονόματος της πόλης με το όνομα που λαμβάνεται απο το API
            //ενώ το αποθηκεύουμε και στην μεταβλητή cityAreaNameFromIp ωστε να το αποθηκεύσουμε στον πίνακα City
            cityAreaNameFromIp = (String) MyHttpRequester.getMyWeatherDataMap().get("areaName");            
            System.out.println("############\ncityAreaNameFromIp: " + cityAreaNameFromIp + "\n#############" );
            cityTextField.setText(cityAreaNameFromIp);
            
            City city = new City(cityAreaNameFromIp);
            this.forecast.setCityname(city);
            
            sunriseJtx.setText((String) MyHttpRequester.getMyWeatherDataMap().get("sunrise"));
            sunsetJtx.setText((String) MyHttpRequester.getMyWeatherDataMap().get("sunset"));
            //Δημιουργούμε ενα string με τις Συντεταγμένες που τις έχουμε αποθηκευμένες σε ένα Map
            String coordinates = (String) MyHttpRequester.getMyWeatherDataMap().get("latitude") + ", " 
                    + (String) MyHttpRequester.getMyWeatherDataMap().get("longitude");
            //Εμφανίζουμε το string των Συντεταγμένων στο αντίστοιχο textField.
            coordinatesJtx.setText(coordinates);
            //Εμφανίζουμε τέλος και την Φάσης της Σελήνης
            moonPhaseTextArea.setText((String) MyHttpRequester.getMyWeatherDataMap().get("moon_phase"));
            
            linker.updateCityTableInDatabase(linker.getCityController(),forecast);
                    
            
        }else{
            clearAllTextFields();
            //Αυτό το τμήμα του κώδικα εκτελείται αν ο χρήστης έχει συμπληρώσει ένα όνομα πόλης
            this.forecast = MyHttpRequester.getCityForecastFromWttrAPI(cityAreaName);
            //Μετατροπή των Int Μεταβλητών σε String και εμφάνιση αυτών σε κατάλληλα textBoxes
            temperatureTextField.setText(String.valueOf(forecast.getTemperature())); 
            humidityTextField.setText(String.valueOf(forecast.getHumidity()));
            windSpeedTextField.setText(String.valueOf(forecast.getWindspeed()));
            uvTextField.setText(String.valueOf(forecast.getUvindex()));
            //weatherDescriptionTextField.setText(forecast.getWeatherdescription());
            weatherDescriptionTextArea.setText(forecast.getWeatherdescription());
            //Αποθήκευση στην μεταβλητη του ονοματος της πόλης που αναζήτησε ο χρήστης με την μορφή που βρέθηκε στο API 
            //και οχι όπως το  έγραψε ο Χρήστης ωστε να υπάρχει συμφωνία με προηγούμενες αναζητήσεις και να αποφευχθούν
            //διπλότυπες εγγραφές στους πίνακες της βάσης.
            //cityAreaNameBasedOnUsersInput = (String) MyHttpRequester.getMyWeatherDataMap().get("areaName");
            //cityTextField.setText(cityAreaNameBasedOnUsersInput);
            cityTextField.setText("");
            cityTextField.setText(forecast.getCityname().getName());
            //System.out.println("forecast.getCityname().getName():" + forecast.getCityname().getName());
            //System.out.println("\ncityAreaNameBasedOnUsersInput: " + forecast.getCityname().getName() + "\n");            
            sunriseJtx.setText((String) MyHttpRequester.getMyWeatherDataMap().get("sunrise"));
            sunsetJtx.setText((String) MyHttpRequester.getMyWeatherDataMap().get("sunset"));
            String coordinates = (String) MyHttpRequester.getMyWeatherDataMap().get("latitude") + ", " 
                    +(String) MyHttpRequester.getMyWeatherDataMap().get("longitude");            
            coordinatesJtx.setText(coordinates);
            moonPhaseTextArea.setText((String) MyHttpRequester.getMyWeatherDataMap().get("moon_phase"));
            
            linker.updateCityTableInDatabase(linker.getCityController(),forecast);
             
        }
        
    }//GEN-LAST:event_cityForecastJButtonSearchActionPerformed
      
    private void clearAllTextFields(){
        temperatureTextField.setText("");
        humidityTextField.setText("");
        windSpeedTextField.setText("");
        uvTextField.setText("");
        windSpeedTextField.setText("");
        uvTextField.setText("");
        weatherDescriptionTextArea.setText("");
        cityTextField.setText("");
        sunriseJtx.setText("");
        sunsetJtx.setText("");
        coordinatesJtx.setText("");
        moonPhaseTextArea.setText("");
    }
    
    private void sunriseJtxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sunriseJtxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sunriseJtxActionPerformed

    private void cityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextFieldActionPerformed

    private void coordinatesJtxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coordinatesJtxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coordinatesJtxActionPerformed

    private void uvTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uvTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uvTextFieldActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        //Καλείται η μέθοδος για την αποθήκευση των καιρικών δεδομένων (κάποιων εκ των εμφανιζομένων) στην ΒΔ
        //Περνάμε ως όρισμα το αντικείμενο POJO που δημιουργήσαμε.
        this.linker.saveCityForecastInDb(forecast);
        //Καθαρισμός Πεδίων Φόρμας
        clearAllTextFields();
        //Μετα την αποθήκευση το αντικείμενο POJO που χρησιμοποιήσαμε καταστρέφεται.
        this.forecast = null;
    }//GEN-LAST:event_saveButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        
        //Δημιουργία ενός αντικειμένου της οθόνης Επεξεργασίας των Καιρικών Δεδομένων
        //για κάποια ημερομηνία και πόλη που έχουμε αποθηκευμένα στην ΒΔ         
        CityForecastEditForm editForm = new CityForecastEditForm();
        //Εμφανίζουμε την οθόνη Επεξεργασίας των Καιρικών Δεδομένων
        editForm.setVisible(true);
        //Αφού ανοίξει η φόρμα για την επεξεργασία των καιρικών δεδομένων της επιθυμητής πόλης
        //γίνεται καθαρισμός των πεδίων της αρχικής φόρμας.
        clearAllTextFields();
        //Μετα την Επεξεργασία το αντικείμενο POJO που χρησιμοποιήσαμε καταστρέφεται.
        this.forecast = null;
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        //Δημιουργία ενός αντικειμένου της οθόνης Διαγραφής των Καιρικών Δεδομένων
        //για κάποια ημερομηνία και πόλη που έχουμε αποθηκευμένα στην ΒΔ         
        CityForecastHistoryForm deleteForm = new CityForecastHistoryForm();
        //Εμφανίζουμε την οθόνη Διαγραφής των Καιρικών Δεδομένων
        deleteForm.setVisible(true);               
        
    }//GEN-LAST:event_deleteButtonActionPerformed
      
       
    
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cityForecastJButtonSearch;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JTextField coordinatesJtx;
    private javax.swing.JLabel coordinatesjLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel humidityLabel;
    private javax.swing.JTextField humidityTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextArea moonPhaseTextArea;
    private javax.swing.JLabel moonPhasejLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel sunriseJLabel;
    private javax.swing.JTextField sunriseJtx;
    private javax.swing.JLabel sunsetJLabel;
    private javax.swing.JTextField sunsetJtx;
    private javax.swing.JLabel temperatureLabel;
    private javax.swing.JTextField temperatureTextField;
    private javax.swing.JLabel uvLabel;
    private javax.swing.JTextField uvTextField;
    private javax.swing.JPanel weatherDataPanel1;
    private javax.swing.JPanel weatherDataPanel2;
    private javax.swing.JLabel weatherDescriptionLabel;
    private javax.swing.JTextArea weatherDescriptionTextArea;
    private javax.swing.JLabel windSpeedLabel;
    private javax.swing.JTextField windSpeedTextField;
    // End of variables declaration//GEN-END:variables
}
